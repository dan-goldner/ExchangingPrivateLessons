// Generated by view binder compiler. Do not edit!
package com.example.exchangingprivatelessons.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.exchangingprivatelessons.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.chip.Chip;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final SwipeRefreshLayout rootView;

  @NonNull
  public final MaterialButton btnAvailableLessons;

  @NonNull
  public final MaterialButton btnGave;

  @NonNull
  public final MaterialButton btnMyLessons;

  @NonNull
  public final MaterialButton btnMyOfferedLessons;

  @NonNull
  public final MaterialButton btnMyRequests;

  @NonNull
  public final MaterialButton btnProfile;

  @NonNull
  public final MaterialButton btnRequestsToMe;

  @NonNull
  public final ScrollView contentGroup;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final SwipeRefreshLayout swipeRefresh;

  @NonNull
  public final MaterialTextView txtGreeting;

  @NonNull
  public final Chip txtLessonsCount;

  @NonNull
  public final Chip txtRequestsCount;

  private FragmentHomeBinding(@NonNull SwipeRefreshLayout rootView,
      @NonNull MaterialButton btnAvailableLessons, @NonNull MaterialButton btnGave,
      @NonNull MaterialButton btnMyLessons, @NonNull MaterialButton btnMyOfferedLessons,
      @NonNull MaterialButton btnMyRequests, @NonNull MaterialButton btnProfile,
      @NonNull MaterialButton btnRequestsToMe, @NonNull ScrollView contentGroup,
      @NonNull ProgressBar progressBar, @NonNull SwipeRefreshLayout swipeRefresh,
      @NonNull MaterialTextView txtGreeting, @NonNull Chip txtLessonsCount,
      @NonNull Chip txtRequestsCount) {
    this.rootView = rootView;
    this.btnAvailableLessons = btnAvailableLessons;
    this.btnGave = btnGave;
    this.btnMyLessons = btnMyLessons;
    this.btnMyOfferedLessons = btnMyOfferedLessons;
    this.btnMyRequests = btnMyRequests;
    this.btnProfile = btnProfile;
    this.btnRequestsToMe = btnRequestsToMe;
    this.contentGroup = contentGroup;
    this.progressBar = progressBar;
    this.swipeRefresh = swipeRefresh;
    this.txtGreeting = txtGreeting;
    this.txtLessonsCount = txtLessonsCount;
    this.txtRequestsCount = txtRequestsCount;
  }

  @Override
  @NonNull
  public SwipeRefreshLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAvailableLessons;
      MaterialButton btnAvailableLessons = ViewBindings.findChildViewById(rootView, id);
      if (btnAvailableLessons == null) {
        break missingId;
      }

      id = R.id.btnGave;
      MaterialButton btnGave = ViewBindings.findChildViewById(rootView, id);
      if (btnGave == null) {
        break missingId;
      }

      id = R.id.btnMyLessons;
      MaterialButton btnMyLessons = ViewBindings.findChildViewById(rootView, id);
      if (btnMyLessons == null) {
        break missingId;
      }

      id = R.id.btnMyOfferedLessons;
      MaterialButton btnMyOfferedLessons = ViewBindings.findChildViewById(rootView, id);
      if (btnMyOfferedLessons == null) {
        break missingId;
      }

      id = R.id.btnMyRequests;
      MaterialButton btnMyRequests = ViewBindings.findChildViewById(rootView, id);
      if (btnMyRequests == null) {
        break missingId;
      }

      id = R.id.btnProfile;
      MaterialButton btnProfile = ViewBindings.findChildViewById(rootView, id);
      if (btnProfile == null) {
        break missingId;
      }

      id = R.id.btnRequestsToMe;
      MaterialButton btnRequestsToMe = ViewBindings.findChildViewById(rootView, id);
      if (btnRequestsToMe == null) {
        break missingId;
      }

      id = R.id.contentGroup;
      ScrollView contentGroup = ViewBindings.findChildViewById(rootView, id);
      if (contentGroup == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      SwipeRefreshLayout swipeRefresh = (SwipeRefreshLayout) rootView;

      id = R.id.txtGreeting;
      MaterialTextView txtGreeting = ViewBindings.findChildViewById(rootView, id);
      if (txtGreeting == null) {
        break missingId;
      }

      id = R.id.txtLessonsCount;
      Chip txtLessonsCount = ViewBindings.findChildViewById(rootView, id);
      if (txtLessonsCount == null) {
        break missingId;
      }

      id = R.id.txtRequestsCount;
      Chip txtRequestsCount = ViewBindings.findChildViewById(rootView, id);
      if (txtRequestsCount == null) {
        break missingId;
      }

      return new FragmentHomeBinding((SwipeRefreshLayout) rootView, btnAvailableLessons, btnGave,
          btnMyLessons, btnMyOfferedLessons, btnMyRequests, btnProfile, btnRequestsToMe,
          contentGroup, progressBar, swipeRefresh, txtGreeting, txtLessonsCount, txtRequestsCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
