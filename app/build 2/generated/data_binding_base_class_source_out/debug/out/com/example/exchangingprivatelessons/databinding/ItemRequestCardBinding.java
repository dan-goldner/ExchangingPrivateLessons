// Generated by view binder compiler. Do not edit!
package com.example.exchangingprivatelessons.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.exchangingprivatelessons.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.Chip;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRequestCardBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final LinearLayout actionsRow;

  @NonNull
  public final MaterialButton approveBtn;

  @NonNull
  public final ShapeableImageView avatarIv;

  @NonNull
  public final MaterialButton cancelBtn;

  @NonNull
  public final MaterialButton declineBtn;

  @NonNull
  public final Chip statusChip;

  @NonNull
  public final TextView subtitleTv;

  @NonNull
  public final TextView titleTv;

  private ItemRequestCardBinding(@NonNull MaterialCardView rootView,
      @NonNull LinearLayout actionsRow, @NonNull MaterialButton approveBtn,
      @NonNull ShapeableImageView avatarIv, @NonNull MaterialButton cancelBtn,
      @NonNull MaterialButton declineBtn, @NonNull Chip statusChip, @NonNull TextView subtitleTv,
      @NonNull TextView titleTv) {
    this.rootView = rootView;
    this.actionsRow = actionsRow;
    this.approveBtn = approveBtn;
    this.avatarIv = avatarIv;
    this.cancelBtn = cancelBtn;
    this.declineBtn = declineBtn;
    this.statusChip = statusChip;
    this.subtitleTv = subtitleTv;
    this.titleTv = titleTv;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRequestCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRequestCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_request_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRequestCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actionsRow;
      LinearLayout actionsRow = ViewBindings.findChildViewById(rootView, id);
      if (actionsRow == null) {
        break missingId;
      }

      id = R.id.approveBtn;
      MaterialButton approveBtn = ViewBindings.findChildViewById(rootView, id);
      if (approveBtn == null) {
        break missingId;
      }

      id = R.id.avatarIv;
      ShapeableImageView avatarIv = ViewBindings.findChildViewById(rootView, id);
      if (avatarIv == null) {
        break missingId;
      }

      id = R.id.cancelBtn;
      MaterialButton cancelBtn = ViewBindings.findChildViewById(rootView, id);
      if (cancelBtn == null) {
        break missingId;
      }

      id = R.id.declineBtn;
      MaterialButton declineBtn = ViewBindings.findChildViewById(rootView, id);
      if (declineBtn == null) {
        break missingId;
      }

      id = R.id.statusChip;
      Chip statusChip = ViewBindings.findChildViewById(rootView, id);
      if (statusChip == null) {
        break missingId;
      }

      id = R.id.subtitleTv;
      TextView subtitleTv = ViewBindings.findChildViewById(rootView, id);
      if (subtitleTv == null) {
        break missingId;
      }

      id = R.id.titleTv;
      TextView titleTv = ViewBindings.findChildViewById(rootView, id);
      if (titleTv == null) {
        break missingId;
      }

      return new ItemRequestCardBinding((MaterialCardView) rootView, actionsRow, approveBtn,
          avatarIv, cancelBtn, declineBtn, statusChip, subtitleTv, titleTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
