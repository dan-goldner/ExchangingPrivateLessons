// Generated by view binder compiler. Do not edit!
package com.example.exchangingprivatelessons.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.exchangingprivatelessons.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowLessonBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton archiveBtn;

  @NonNull
  public final TextView dateTv;

  @NonNull
  public final TextView descPreviewTv;

  @NonNull
  public final ShapeableImageView lessonImg;

  @NonNull
  public final TextView ratingTv;

  @NonNull
  public final TextView titleTv;

  private RowLessonBinding(@NonNull MaterialCardView rootView, @NonNull MaterialButton archiveBtn,
      @NonNull TextView dateTv, @NonNull TextView descPreviewTv,
      @NonNull ShapeableImageView lessonImg, @NonNull TextView ratingTv,
      @NonNull TextView titleTv) {
    this.rootView = rootView;
    this.archiveBtn = archiveBtn;
    this.dateTv = dateTv;
    this.descPreviewTv = descPreviewTv;
    this.lessonImg = lessonImg;
    this.ratingTv = ratingTv;
    this.titleTv = titleTv;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RowLessonBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowLessonBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_lesson, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowLessonBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.archiveBtn;
      MaterialButton archiveBtn = ViewBindings.findChildViewById(rootView, id);
      if (archiveBtn == null) {
        break missingId;
      }

      id = R.id.dateTv;
      TextView dateTv = ViewBindings.findChildViewById(rootView, id);
      if (dateTv == null) {
        break missingId;
      }

      id = R.id.descPreviewTv;
      TextView descPreviewTv = ViewBindings.findChildViewById(rootView, id);
      if (descPreviewTv == null) {
        break missingId;
      }

      id = R.id.lessonImg;
      ShapeableImageView lessonImg = ViewBindings.findChildViewById(rootView, id);
      if (lessonImg == null) {
        break missingId;
      }

      id = R.id.ratingTv;
      TextView ratingTv = ViewBindings.findChildViewById(rootView, id);
      if (ratingTv == null) {
        break missingId;
      }

      id = R.id.titleTv;
      TextView titleTv = ViewBindings.findChildViewById(rootView, id);
      if (titleTv == null) {
        break missingId;
      }

      return new RowLessonBinding((MaterialCardView) rootView, archiveBtn, dateTv, descPreviewTv,
          lessonImg, ratingTv, titleTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
