// Generated by view binder compiler. Do not edit!
package com.example.exchangingprivatelessons.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.exchangingprivatelessons.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetEditProfileBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView avatarHintTv;

  @NonNull
  public final ImageView avatarIv;

  @NonNull
  public final TextInputEditText bioEt;

  @NonNull
  public final MaterialButton deleteAccountBtn;

  @NonNull
  public final TextInputEditText displayEt;

  @NonNull
  public final Button removeAvatarBtn;

  @NonNull
  public final Button saveBtn;

  private BottomSheetEditProfileBinding(@NonNull LinearLayout rootView,
      @NonNull TextView avatarHintTv, @NonNull ImageView avatarIv, @NonNull TextInputEditText bioEt,
      @NonNull MaterialButton deleteAccountBtn, @NonNull TextInputEditText displayEt,
      @NonNull Button removeAvatarBtn, @NonNull Button saveBtn) {
    this.rootView = rootView;
    this.avatarHintTv = avatarHintTv;
    this.avatarIv = avatarIv;
    this.bioEt = bioEt;
    this.deleteAccountBtn = deleteAccountBtn;
    this.displayEt = displayEt;
    this.removeAvatarBtn = removeAvatarBtn;
    this.saveBtn = saveBtn;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetEditProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetEditProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_edit_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetEditProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.avatarHintTv;
      TextView avatarHintTv = ViewBindings.findChildViewById(rootView, id);
      if (avatarHintTv == null) {
        break missingId;
      }

      id = R.id.avatarIv;
      ImageView avatarIv = ViewBindings.findChildViewById(rootView, id);
      if (avatarIv == null) {
        break missingId;
      }

      id = R.id.bioEt;
      TextInputEditText bioEt = ViewBindings.findChildViewById(rootView, id);
      if (bioEt == null) {
        break missingId;
      }

      id = R.id.deleteAccountBtn;
      MaterialButton deleteAccountBtn = ViewBindings.findChildViewById(rootView, id);
      if (deleteAccountBtn == null) {
        break missingId;
      }

      id = R.id.displayEt;
      TextInputEditText displayEt = ViewBindings.findChildViewById(rootView, id);
      if (displayEt == null) {
        break missingId;
      }

      id = R.id.removeAvatarBtn;
      Button removeAvatarBtn = ViewBindings.findChildViewById(rootView, id);
      if (removeAvatarBtn == null) {
        break missingId;
      }

      id = R.id.saveBtn;
      Button saveBtn = ViewBindings.findChildViewById(rootView, id);
      if (saveBtn == null) {
        break missingId;
      }

      return new BottomSheetEditProfileBinding((LinearLayout) rootView, avatarHintTv, avatarIv,
          bioEt, deleteAccountBtn, displayEt, removeAvatarBtn, saveBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
